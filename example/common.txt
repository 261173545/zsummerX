

aux_source_directory(./ source)    
aux_source_directory(./lua/ lua_src)  
#aux_source_directory(./lua-5.3.0/ lua_src)  
set(source ${source} ${lua_src})
#include_directories(./lua-5.3.0)
include_directories(./lua/)
set(EXECUTABLE_OUTPUT_PATH ${example_SOURCE_DIR}/bin)
if(APPLE)
	add_executable(${PROJECT_NAME}_select${LIB_SUFFIX} ${source})
	target_link_libraries(${PROJECT_NAME}_select${LIB_SUFFIX} zsummerX_select${LIB_SUFFIX} log4z${LIB_SUFFIX}  pthread)
else()
	add_executable(${PROJECT_NAME}_select${LIB_SUFFIX} ${source})
	target_link_libraries(${PROJECT_NAME}_select${LIB_SUFFIX} zsummerX_select${LIB_SUFFIX} log4z${LIB_SUFFIX}  pthread  rt)
	add_executable(${PROJECT_NAME}${LIB_SUFFIX} ${source})
	target_link_libraries(${PROJECT_NAME}${LIB_SUFFIX} zsummerX${LIB_SUFFIX} log4z${LIB_SUFFIX}  pthread  rt)
endif()


set_target_properties(${PROJECT_NAME}_select${LIB_SUFFIX} PROPERTIES COMPILE_DEFINITIONS "ZSUMMERX_USE_SELECT=1")

 if (CMAKE_BUILD_TYPE STREQUAL "Debug")
 	add_definitions(-Wall -g -ggdb -O0 -std=c++11 -D_GLIBCXX_USE_NANOSLEEP)
 else()
 	add_definitions(-Wall  -O2 -DNDEBUG -std=c++11 -D_GLIBCXX_USE_NANOSLEEP)
 endif()

