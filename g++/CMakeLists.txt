cmake_minimum_required(VERSION 2.6)
project(libzsummerX)
set(LIB_NAME zsummerX)


aux_source_directory(${SRC_DIR}/common COMMON)
if(WIN32)
aux_source_directory(${SRC_DIR}/iocp NETWORK)
else()
aux_source_directory(${SRC_DIR}/epoll NETWORK)
endif()
aux_source_directory(${SRC_DIR}/timer TIMER)
set(source  ${COMMON} ${NETWORK} ${TIMER} )

if (WIN32)
 if(CMAKE_GENERATOR STREQUAL "Visual Studio 12")
  if (NOT CMAKE_BUILD_TYPE STREQUAL "DEBUG")
   set(LIB_NAME ${PROJECT_NAME}_win32)
  else()
   set(LIB_NAME ${PROJECT_NAME}_win32d)
  endif()
 else(CMAKE_GENERATOR STREQUAL "Visual Studio 12 Win64")
  if (NOT CMAKE_BUILD_TYPE STREQUAL "DEBUG")
   set(LIB_NAME ${PROJECT_NAME}_win64)
  else()
   set(LIB_NAME ${PROJECT_NAME}_win64d)
  endif()
 endif()
else()
 if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
   add_definitions(-Wall -g -ggdb -O0 -std=c++11)
   set(LIB_NAME ${LIB_NAME}_d)
 else()
   add_definitions(-Wall -O2 -std=c++11 -DNODEBUG)
 endif()
endif()

message("LIB_NAME=" ${LIB_NAME} ", LINKER FLAGS=" ${CMAKE_EXE_LINKER_FLAGS})

add_library(${LIB_NAME} STATIC ${source})

